on:
  push:
    branches:
      - main
    paths:
      - "**/*.rs"
      - "**/Cargo.toml"
      - Cargo.lock
  pull_request:
    paths:
      - "**/*.rs"
      - "**/Cargo.toml"
      - Cargo.lock
      - .github/workflows/ci.yml

name: ciÂ·rs

concurrency:
  group: ci/rs/${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all-features
        env:
          RUSTFLAGS: "-D warnings"

  test:
    needs: fmt
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all-features
        env:
          RUSTFLAGS: "-D warnings"

  coverage-unit:
    needs: fmt
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install cargo-tarpaulin
      - run: cargo tarpaulin -o lcov --output-dir coverage
      - uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: coverage/lcov.info
          parallel: true
          flag-name: ${{ matrix.os }}

  coverage-integration:
    needs: fmt
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: build
        run: |
          RUSTFLAGS="-C instrument-coverage" cargo build
          echo "$PWD/target/debug" >> $GITHUB_PATH

      - run: pkgx --help
      - run: pkgx --version
      - run: pkgx +git
      - run: pkgx +git --json
      - run: pkgx +git --json=v1
      - run: pkgx git --version
      - run: pkgx --silent +git
      - run: pkgx --quiet +git
      - run: pkgx +git -- git --version   # lib/utils.rs:find_program
      - run: pkgx --shellcode || true
      - run: pkgx -qq git --version
      - run: pkgx -s git --version
      - run: pkgx -j +git
      - run: pkgx /usr/bin/awk --version
      - run: pkgx +yarnpkg.com yarn --version
      - run: pkgx +yarnpkg.com -- yarn --version
      - run: '! pkgx yarn --version'

      - name: generate coverage
        run: |
          cargo install rustfilt
          pkgx +llvm.org -- llvm-profdata merge -sparse default_*.profraw -o default.profdata
          pkgx +llvm.org -- llvm-cov export \
            ./target/debug/pkgx \
            --format=lcov \
             --ignore-filename-regex="$HOME/.cargo" \
            --instr-profile=default.profdata \
            -Xdemangler=rustfilt \
            > lcov.info

      - uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: lcov.info
          parallel: true
          flag-name: ${{ matrix.os }}

  upload-coverage:
    needs: [coverage-unit, coverage-integration, test]
    runs-on: ubuntu-latest
    steps:
      - uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
